package com.infinity.infoway.bmu.adapter;import android.app.Activity;import android.content.Context;import android.content.SharedPreferences;import android.support.annotation.NonNull;import android.support.v4.app.FragmentManager;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import com.android.volley.RequestQueue;import com.infinity.infoway.bmu.CommonCls.CustomTextView;import com.infinity.infoway.bmu.R;import com.infinity.infoway.bmu.app.DataStorage;import com.infinity.infoway.bmu.model.DisplayLeave;import java.util.ArrayList;import java.util.List;/** * Created by Pragna on 16-4-2019. */public class ViewLeaveAdapter extends BaseAdapter {    ArrayList<String> check_IDS = new ArrayList<>();    private Context ctx;    // List<String> AllStatuslist = new ArrayList<>();    ViewHolder holder = null;    public FragmentManager f_manager;    //private LayoutInflater inflater;    private LayoutInflater inflater;    SharedPreferences prefs;    String customerId;    View view;    private int selectedPosition = -1;    public ArrayList<String> selected = new ArrayList<String>();    List<String> customBenifitList;    DataStorage storage;    RequestQueue queue;    Activity a;    DisplayLeave displayLeave;    public ViewLeaveAdapter(Context ctx, DisplayLeave displayLeave) {        this.ctx = ctx;        this.displayLeave = displayLeave;        inflater = LayoutInflater.from(this.ctx);        storage = new DataStorage("Login_Detail", ctx);    }    @Override    public int getCount() {        // return customBenifitList.size();        System.out.println("adapter count ::::::" + displayLeave.getTable().size());        return displayLeave.getTable().size();    }    @Override    public Object getItem(int position) {        return position;        //  return customBenifitList.get(position);    }    @Override    public long getItemId(int position) {        return position;    }    private class ViewHolder {        private CustomTextView tv_app_date, tv_leave_type, tv_leave_date, tv_leave_remarks, tv_leave_status;    }    @NonNull    @Override    public View getView(final int position, View convertView, ViewGroup parent) {        view = convertView;        if (view == null) {            view = inflater.inflate(R.layout.viewleaveadpter, null);            holder = new ViewHolder();            holder.tv_app_date = (CustomTextView) view.findViewById(R.id.tv_app_date);            holder.tv_leave_type = (CustomTextView) view.findViewById(R.id.tv_leave_type);            holder.tv_leave_date = (CustomTextView) view.findViewById(R.id.tv_leave_date);            holder.tv_leave_remarks = (CustomTextView) view.findViewById(R.id.tv_leave_remarks);            holder.tv_leave_status = (CustomTextView) view.findViewById(R.id.tv_leave_status);            view.setTag(holder);        } else {            holder = (ViewHolder) view.getTag();        }        holder.tv_app_date.setText("  " + displayLeave.getTable().get(position).getLeave_apply_date() + "");        holder.tv_leave_date.setText("  " + displayLeave.getTable().get(position).getLeave_date() + "");        holder.tv_leave_type.setText("  " + displayLeave.getTable().get(position).getLeave_type() + "");        holder.tv_leave_remarks.setText("  " + displayLeave.getTable().get(position).getStud_remarks() + "");        if (displayLeave.getTable().get(position).getApp_status_text().compareToIgnoreCase("Pending") == 0) {            holder.tv_leave_status.setText("  " + displayLeave.getTable().get(position).getApp_status_text() + "");            holder.tv_leave_status.setTextColor(ctx.getResources().getColor(R.color.red));        } else {            holder.tv_leave_status.setText("  " + displayLeave.getTable().get(position).getApp_status_text() + "");            holder.tv_leave_status.setTextColor(ctx.getResources().getColor(R.color.green));        }        return view;    }}